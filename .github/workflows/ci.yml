name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      - name: Code Quality Check
        run: |
          mvn checkstyle:check
          mvn spotbugs:check
      
      - name: Security Scan
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=pom.xml --severity-threshold=high
          command: test

  test:
    name: Run Tests
    needs: validate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      - name: Start Redis
        uses: supercharge/redis-github-action@1.5.0
      
      - name: Run Tests
        run: mvn test

  build:
    name: Build and Push Docker Images
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ecommerce, store, exchange, fidelity]
    steps:
      - uses: actions/checkout@v3
      
      - name: Validate Service Directory
        run: |
          if [ ! -d "services/${{ matrix.service }}" ]; then
            echo "Service directory services/${{ matrix.service }} does not exist"
            exit 1
          fi
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      
      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: ./services/${{ matrix.service }}
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}-service:${{ env.BRANCH_NAME }}
            ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}-service:${{ env.BRANCH_NAME }}-${{ github.sha }}
